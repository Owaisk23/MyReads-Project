{"version":3,"sources":["BooksAPI.js","history.js","books.js","searches.js","bookshelf.js","shelves.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","createBrowserHistory","Book","state","shelf","handleChange","event","_this","setState","target","value","props","updateBookCategory","book","this","react_default","a","createElement","className","style","width","height","backgroundImage","concat","imageLinks","thumbnail","onChange","bind","disabled","title","authors","map","author","React","Component","Search","query","searchBooks","_this2","searchedBookList","onClick","onBackPress","type","placeholder","updateQuery","index","books","key","BookShelf","Shelves","shelfs","react_router_dom","to","bookshelf","bookList","filter","BooksApp","showSearchPage","booksList","fetch","then","res","json","data","_this3","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","BooksAPI","some","b","prevState","toConsumableArray","_this4","error","matchedBook","bl","length","clearSearchResult","_this5","react_router","history","exact","path","render","shelves","updateShelf","_ref","searches","push","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9235aa5b.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import createBrowserHistory from 'history/createBrowserHistory'\n\nexport default createBrowserHistory();","import React from 'react'\nimport PropTypes from 'prop-types'\n\nclass Book extends React.Component {\n\n\tstate = {\n\t\tshelf: null\n\t}\n\n    static propTypes = {\n\t\tbook: PropTypes.object.isRequired,\n\t\tupdateBookCategory: PropTypes.func.isRequired\n\t}\n\n\thandleChange = (event) => {\n\t\tthis.setState({ shelf: event.target.value });\n\t\tthis.props.updateBookCategory(this.props.book,event.target.value);\n\t};\n    \n\trender() {\n\t\tvar book = this.props.book;\n\t\treturn (\n\t\t\t<li>\n                <div className=\"book\">\n                    <div className=\"book-top\">\n                    <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage:  `url(\"${book.imageLinks && book.imageLinks.thumbnail?book.imageLinks.thumbnail:''}\")` }}></div>\n                    <div className=\"book-shelf-changer\">\n                        <select onChange={this.handleChange.bind(this)} value={book.shelf}>\n                        <option value=\"move\" disabled>Move to...</option>\n                        <option value=\"currentlyReading\">Currently Reading</option>\n                        <option value=\"wantToRead\">Want to Read</option>\n                        <option value=\"read\">Read</option>\n                        <option value=\"none\">None</option>\n                        </select>\n                    </div>\n                    </div>\n                    <div className=\"book-title\">{book.title}</div>\n                    <div className=\"book-authors\">{ book.authors && book.authors.map(author=>author+\", \")}</div>\n                </div>\n            </li>\n\t\t)\n\t}\n}\n\nexport default Book","import React from 'react'\nimport Book from './books'\n\nclass Search extends React.Component {\n\n\tstate = {\n\t\tquery:''\n\t}\n\n\tupdateQuery(query) {\n\t\tthis.setState(()=>({\n\t\t\tquery: query\n\t\t}));        \n\t\tthis.props.searchBooks(query);\n\t}\n    \n\trender() {\n\t\tconst { query } = this.state;\n\t\tconst { searchedBookList} = this.props;\n\t\treturn (\n            <div className=\"search-books\">\n            \n                <div className=\"search-books-bar\">\n                    <button className=\"close-search\" onClick={() => this.props.onBackPress() }>Close</button>\n                    <div className=\"search-books-input-wrapper\">\n                    {/*\n                        NOTES: The search from BooksAPI is limited to a particular set of search terms.\n                        You can find these search terms here:\n                        https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n                        However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n                        you don't find a specific author or title. Every search is limited by search terms.\n                    */}\n                    <input type=\"text\" placeholder=\"Search by title or author\" \n\t\t\t\t\t\t\tvalue={query} \n\t\t\t\t\t\t\tonChange={(event)=> {\n\t\t\t\t\t\t\t\tthis.updateQuery(event.target.value)\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n                    </div>\n                </div>\n                \n                <div className=\"search-books-results\">\n                    <ol className=\"books-grid\">\n\t\t\t\t\t\t{ searchedBookList.map((book,index) => {\n\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t<Book\n\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\tbook={book}\n\t\t\t\t\t\t\t\t\tupdateBookCategory={this.props.updateBookCategory}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n                    </ol>\n                </div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Search","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Book from './books'\n\nclass BookShelf extends React.Component {\n\n\tstatic propTypes = {\n\t\ttitle: PropTypes.string.isRequired,\n\t\tbooks: PropTypes.array.isRequired,\n\t\tupdateBookCategory: PropTypes.func.isRequired\n\t}\n\n  \trender() {\n\t\treturn (\n        \t<div className=\"bookshelf\">\n        \t<h2 className=\"bookshelf-title\">{this.props.title}</h2>\n        \t<div className=\"bookshelf-books\">\n          \t\t<ol className=\"books-grid\">\n\t\t\t\t{ this.props.books.map((book,index) => {\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<Book\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tbook={book}\n\t\t\t\t\t\t\tupdateBookCategory={this.props.updateBookCategory}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t})}\n        \t  </ol>\n        \t</div>\n      \t</div>\n\t\t)\n\t}\n}\n\nexport default BookShelf","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport BookShelf from './bookshelf'\n\nclass Shelves extends React.Component {\n\n\tstate = {\n\t\tshelfs: [\n\t\t\t{title:\"Currently Reading\", value:\"currentlyReading\"},\n\t\t\t{title:\"Want to Read\", value:\"wantToRead\"},\n\t\t\t{title:\"Read\", value:\"read\"}\n\t\t]\n\t}\n\n\tstatic propTypes = {\n\t\tbookList: PropTypes.array.isRequired,\n\t\tupdateBookCategory: PropTypes.func.isRequired\n\t}\n\n\trender() {\n\t\tvar shelfs = this.state.shelfs;\n\t\treturn (\n            <div className=\"list-books\">\n                <div className=\"list-books-title\">\n\t\t\t\t\t<div>\n\t\t\t\t\t<Link to=\"/search\" className=\"open-search\">\n\t\t\t\t\t\t<button>Search</button>\n\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n                    <div className=\"list-books-title-heading\">\n                        <h1>MyReads</h1>\n                    </div>\n                </div>\n                <div className=\"list-books-content\">\n                    <div>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tshelfs.map(shelf=> {\n\t\t\t\t\t\t\t\treturn( \n\t\t\t\t\t\t\t\t\t<BookShelf\n\t\t\t\t\t\t\t\t\t\tkey={shelf.value}\n\t\t\t\t\t\t\t\t\t\ttitle={shelf.title}\n\t\t\t\t\t\t\t\t\t\tbooks={this.props.bookList.filter(book=>book.shelf === shelf.value)}\n\t\t\t\t\t\t\t\t\t\tupdateBookCategory={this.props.updateBookCategory}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Shelves","import React from 'react'\nimport * as BooksAPI from './BooksAPI'\nimport { Route, Router, Switch } from 'react-router-dom'\nimport history from \"./history\"\nimport Search from './searches'\nimport Shelves from './shelves'\nimport './App.css'\n\n\nclass BooksApp extends React.Component {\n  \n\tstate = {\n\t\tshowSearchPage: false,\n\t\tbooksList : [],\n\t\tsearchedBookList: []      \n\t}\n\n\t//Load books associated with categories on DOM\n\t\n\tcomponentDidMount(){\n\t\tBooksAPI.getAll().then(data=> {\n\t\t\tthis.setState({booksList:data});\n\t\t})\n\t}\n\n\tclearSearchResult(){\n\t\tthis.setState(()=>({\n\t\t\tsearchedBookList: []\n\t\t}));\n\t}\n\t\n\t// This functions will be used to update the book category\n     \n\tupdateShelf(book, shelf) {\n\t\tBooksAPI.update(book,shelf)\n\t\t.then(data=>{\n\t\t\tif(this.state.booksList.some(b=> b.id===book.id)){\n\t\t\t\tthis.setState((prevState)=> ({\n\t\t\t\t\tbooksList : prevState.booksList.map(b=> {\n\t\t\t\t\t\tif(b.id === book.id){\n\t\t\t\t\t\t\tb.shelf = shelf;\n\t\t\t\t\t}\n\t\t\t\t\t\treturn b;\n\t\t\t\t\t})\n\t\t\t\t}));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbook.shelf = shelf;\n\t\t\t\tthis.setState((prevState)=> ({\n\t\t\t\tbooksList : [...prevState.booksList,book]\n\t\t\t\t}));\n\t\t\t}            \n\t\t});\n\t}\n\n    // This function will be to find books, also we need to match book category in both searched and current books \n\t\n\tsearchBooks(query) {\n\t\tif(query){            \n\t\t\tBooksAPI.search(query)\n\t\t\t.then(data=> {\n\t\t\t\tthis.setState(()=>({\n\t\t\t\t\tsearchedBookList : data.error? []: data.map(b=> {                        \n\t\t\t\t\t\tvar matchedBook = this.state.booksList.filter(bl=> bl.id===b.id);\n\t\t\t\t\t\tif(matchedBook && matchedBook.length>0){\n\t\t\t\t\t\t\tb.shelf = matchedBook[0].shelf;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tb.shelf = \"none\";\n\t\t\t\t\t\t}\n\t\t\t\t\treturn b;\n\t\t\t\t\t})\n\t\t\t\t}))\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis.clearSearchResult();\n\t\t}\n\t}\n\n \n\trender() {        \n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Router history={history}>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route \n\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\tpath=\"/\"\n\t\t\t\t\t\t\trender={()=> (\n\t\t\t\t\t\t\t\t<Shelves \n\t\t\t\t\t\t\t\t\tbookList={this.state.booksList}\n\t\t\t\t\t\t\t\t\tupdateBookCategory={this.updateShelf.bind(this)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\tpath=\"/search\"\n\t\t\t\t\t\t\trender={({history})=> (\n\t\t\t\t\t\t\t\t<Search\n\t\t\t\t\t\t\t\t\tsearchedBookList={this.state.searchedBookList}\n\t\t\t\t\t\t\t\t\tsearchBooks={this.searchBooks.bind(this)}\n\t\t\t\t\t\t\t\t\tupdateBookCategory={this.updateShelf.bind(this)}\n\t\t\t\t\t\t\t\t\tonBackPress={()=> {\n\t\t\t\t\t\t\t\t\tthis.clearSearchResult();\n\t\t\t\t\t\t\t\thistory.push(\"/\");\n\t\t\t\t\t\t\t\t\t}} \n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)} \n\t\t\t\t\t\t/>\n\t\t\t\t\t</Switch>\n\t\t\t\t</Router>                \n\t\t\t</div>\n\t\t);\n\t}\n\n}\n\nexport default BooksApp;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>, \n        document.getElementById(\"root\")\n)"],"sourceRoot":""}